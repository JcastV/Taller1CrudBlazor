@page "/ProductoAdd"
@using Data.Model
@using Data.Services

@inject IFacProductoService FacProductoService
@inject NavigationManager NavigationManager
@inject IJSRuntime js
<h1>Ingreso de productos</h1>
<br />
<RadzenTemplateForm Data="@producto">

</RadzenTemplateForm>

<EditForm Model="@producto" OnValidSubmit="@FacProductoInsert">
    <table class="table">
        <tr>
            <td>Nombre:</td>
            <td><input type="text" @bind="producto.NOMBRE" /></td>
        </tr>
        <tr>
            <td>Precio:</td>
            <td><input type="number" @bind="producto.PRECIO" /></td>
        </tr>
        <tr>
            <td>Foto:</td>
            <td><input type="text" @bind="producto.FOTO" /></td>
        </tr>
        <tr>
            <td>Descripción:</td>
            <td><input type="text" @bind="producto.DESCRIPCION" /></td>
        </tr>
        <tr>
            <td>Stock:</td>
            <td><input type="number" @bind="producto.STOCK" /></td>
        </tr>
        <tr>
            <td colspan="2" style="text-align:center">
                <input type="submit" value="Adicionar" class="btn-primary"/>
                <input type="button" value="Cancelar" @onclick="@Cancel" class="btn-secondary"/>
            </td>
        </tr>

    </table>
    @if (productos == null)
    {
        <p><em>Cargando...</em></p>
    }
    else
    {
    <table colspan="6" class="table table-striped">
        <thead>
            <tr>
                <th>ID</th>
                <th>Producto</th>
                <th>Descripción</th>
                <th>Precio</th>
                <th>Stock</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in productos)
            {
            <tr>
                <td>@item.ID</td>
                <td>@item.NOMBRE</td>
                <td>@item.DESCRIPCION</td>
                <td>@item.PRECIO</td>
                <td>@item.STOCK</td>
                <td><a href=""><i class="oi oi-trash"></i></a></td>
                <td><a href=""><i class="oi oi-pencil"></i></a></td>
            </tr>
            }
        </tbody>
    </table>
    }
</EditForm>

@code {
    FacProducto producto = new FacProducto();
    protected async Task FacProductoInsert()
    {
        await js.InvokeVoidAsync("confirm","¡Producto guardado correctamente!");
        await FacProductoService.FacProductoInsert(producto);
        NavigationManager.NavigateTo("/");
    }
    void Cancel()
    {
        NavigationManager.NavigateTo("/");
    }

    private IEnumerable<FacProducto> productos;
    protected override async Task OnInitializedAsync()
    {
        try
        {
            productos = await FacProductoService.ListarProductos();
        }
        catch (Exception)
        {

            throw;
        }
    }

    protected async Task FacProductoDelete()
    {
        await js.InvokeVoidAsync("confirm", "¡Producto Eliminado correctamente!");
        NavigationManager.NavigateTo("/ProductoAdd");
    }
}

